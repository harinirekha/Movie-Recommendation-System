# -*- coding: utf-8 -*-
"""Movie Recommendation System

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VDXBX_buYdUgaWXaLg73sp_KtA9s8wkz

# **Import Library**
"""

import pandas as pd
import numpy as np

"""# **Import Dataset**"""

df = pd.read_csv('/content/drive/MyDrive/Movies Recommendation.csv')

df.head()

df.info()

df.shape

df.columns

"""# **Get Feature Selection**"""

df_features = df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features

X = df_features['Movie_Genre']+' '+df_features['Movie_Keywords']+' '+df_features['Movie_Tagline']+' '+df_features['Movie_Cast']+' '+df_features['Movie_Director']

X.shape

"""# **Get Feature Text Coversion To Tokens**"""

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf = TfidfVectorizer()

X = tfidf.fit_transform(X)

X.shape

print(X)

"""# **Get Similarity Score Using Cosine Similarity**"""

from sklearn.metrics.pairwise import cosine_similarity

similarity_score = cosine_similarity(X)

similarity_score

similarity_score.shape

"""# **Get Movie Name As Input From User And Validate For Closest Spelling**"""

favourite_movie_name = input('Enter your favourite movie name : ')

all_movies_title_list = df['Movie_Title'].tolist()

import difflib

movie_reocmmendation = difflib.get_close_matches(favourite_movie_name,all_movies_title_list)
print(movie_reocmmendation)

close_match = movie_reocmmendation[0]
print(close_match)

index_of_close_match_movie = df[df.Movie_Title == close_match]['Movie_ID'].values[0]
print(index_of_close_match_movie)

recommendation_score = list(enumerate(similarity_score[index_of_close_match_movie]))
print(recommendation_score)

len(recommendation_score)

"""## Get All Movies Sort Based On Recommendation Score wrt Favourite Movie"""

sorted_similar_movies = sorted(recommendation_score,key = lambda x:x[1], reverse = True)
print(sorted_similar_movies)

print('Top 30 Movies Suggestions for You : \n')
i = 1
for movie in sorted_similar_movies:
  index = movie[0]
  title_from_index = df[df.index == index]['Movie_Title'].values[0]
  if(i<31):
    print(i, '.',title_from_index)
    i += 1

"""# **Top 10 Movie Recommendation System**"""

Movie_Name = input('Enter uour favourite movie name : ')
list_of_all_titles = df['Movie_Title'].tolist()
find_close_match = difflib.get_close_matches(Movie_Name,list_of_all_titles)
Close_Match = find_close_match[0]
index_of_movie = df[df.Movie_Title == Close_Match]['Movie_ID'].values[0]
recommendation_score = list(enumerate(similarity_score[index_of_close_match_movie]))
sorted_similar_movies = sorted(recommendation_score,key = lambda x:x[1], reverse = True)
print('Top 10 Movies suggested for you : \n')
i = 1
for movie in sorted_similar_movies:
  index = movie[0]
  title_from_index = df[df.Movie_ID==index]['Movie_Title'].values
  if (i<11):
    print(i, '.',title_from_index)
    i+=1